<!DOCTYPE html>
<html lang="fr">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gestion des Projets</title>

    <!-- Lien vers Bootstrap CSS -->
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <!-- Lien vers votre feuille de style CSS -->
    <link rel="stylesheet" href="/css/style.css">
</head>

<body>
    {% include 'header.twig' %} <!-- Inclure l'en-tête -->

    <main class="container mt-5">
      
            <h2>Bienvenue, {{ projet.utilisateur.nom }} !</h2>
            <p class="lead">Profitez de votre gestion de projets !</p>
            {% if projets is empty %}
                <a href="#creerProjet" class="btn btn-primary btn-lg mt-3" data-toggle="modal">Créer votre premier projet</a>
            {% else %}
                <a href="#creerProjet" class="btn btn-primary btn-lg mt-3" data-toggle="modal">Créer un nouveau projet</a>
                <a href="/projets" class="btn btn-primary btn-lg mt-3">Voir mes projets</a>
            {% endif %}
        
           <h1>Liste des Projets</h1>

<div class="row">
    {% for projet in projets %}
        <div class="col-md-4 mb-4">
            <div class="card shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">{{ projet.nom }}</h5>
                    <p class="card-text">{{ projet.description }}</p>
                    <p><strong>Début :</strong> {{ projet.date_debut | date('d/m/Y') }} - <strong>Fin :</strong> {{ projet.date_fin | date('d/m/Y') }}</p>
                    <div class="d-flex justify-content-end">
                        <button class="btn btn-warning btn-sm mr-2" onclick="editProject({{ projet.id }})">Modifier</button>
                        <button class="btn btn-danger btn-sm" onclick="deleteProject({{ projet.id }}, '{{ projet.nom }}')">Supprimer</button>
{#                         <button class="btn btn-success btn-sm" onclick="window.location.href='/api/projets/{{ projet.id }}/taches'">Voir les tâches</button>
 #}                   
                     <!-- Exemple de bouton Voir les tâches -->
<a href="/taches/{{ projet.id }}" class="btn btn-primary">Voir les tâches</a>
 
  <button id="btnAjouterMembre" class="btn btn-success" data-projet-id="{{ projet.id }}">
    Ajouter des membres
</button>
                 </div>
                </div>
            </div>
        </div>
    {% endfor %}
</div>




            <!-- Modal de création de projet -->
            <div class="modal fade" id="creerProjet" tabindex="-1" role="dialog" aria-labelledby="creerProjetLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="creerProjetLabel">Créer un nouveau projet</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <form id="projectForm">
                            <div class="modal-body">
                                <div class="form-group">
                                    <label for="nom">Nom du projet</label>
                                    <input type="text" class="form-control" id="nom" name="nom" required>
                                </div>
                                <div class="form-group">
                                    <label for="description">Description</label>
                                    <textarea class="form-control" id="description" name="description" required></textarea>
                                </div>
                                <div class="form-group">
                                    <label for="date_debut">Date de début</label>
                                    <input type="date" class="form-control" id="date_debut" name="date_debut" required>
                                </div>
                                <div class="form-group">
                                    <label for="date_fin">Date de fin</label>
                                    <input type="date" class="form-control" id="date_fin" name="date_fin" required>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Annuler</button>
                                <button type="submit" class="btn btn-primary">Créer le projet</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>

           <!-- Modal pour modifier un projet -->
<div class="modal fade" id="editProjet" tabindex="-1" role="dialog" aria-labelledby="editProjetLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editProjetLabel">Modifier le projet</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form id="editProjectForm">
                <div class="modal-body">
                    <div class="form-group">
                        <input type="hidden" id="editProjectId" name="id">
                    </div>
                    <div class="form-group">
                        <label for="editNom">Nom du projet</label>
                        <input type="text" class="form-control" id="editNom" name="nom" required>
                    </div>
                    <div class="form-group">
                        <label for="editDescription">Description</label>
                        <textarea class="form-control" id="editDescription" name="description" required></textarea>
                    </div>
                    <div class="form-group">
                        <label for="editDate_debut">Date de début</label>
                        <input type="date" class="form-control" id="editDate_debut" name="date_debut" required>
                    </div>
                    <div class="form-group">
                        <label for="editDate_fin">Date de fin</label>
                        <input type="date" class="form-control" id="editDate_fin" name="date_fin" required>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Annuler</button>
                    <button type="submit" class="btn btn-primary">Modifier le projet</button>
                </div>
            </form>
        </div>
    </div>
</div>


{# <!-- Modal pour ajouter des membres -->
<div class="modal fade" id="ajouterMembreModal" tabindex="-1" aria-labelledby="ajouterMembreModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="ajouterMembreModalLabel">Ajouter des membres au projet</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Formulaire pour saisir les membres -->
                <form id="ajouterMembreForm">
                    <div class="mb-3">
                        <label for="membersEmail" class="form-label">E-mails des membres (séparés par des virgules)</label>
                        <input type="text" class="form-control" id="membersEmail" name="membersEmail" required>
                    </div>
                    <button type="submit" class="btn btn-primary">Ajouter des membres</button>
                </form>
            </div>
        </div>
    </div>
</div> #}

<!-- Modal pour saisir l'email du membre à inviter -->
<div class="modal fade" id="ajouterMembreModal" tabindex="-1" aria-labelledby="ajouterMembreModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="ajouterMembreModalLabel">Inviter un membre au projet</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="ajouterMembreForm">
                    <div class="mb-3">
                        <label for="memberEmail" class="form-label">Email du membre</label>
                        <input type="email" class="form-control" id="memberEmail" name="memberEmail" required>
                    </div>
                    <button type="submit" class="btn btn-primary">Envoyer l'invitation</button>
                </form>
            </div>
        </div>
    </div>
</div>


    </main>

    <!-- jQuery et Bootstrap JS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>


    <script>
        // Gestion de l'envoi du formulaire pour créer un projet
        document.getElementById('projectForm').addEventListener('submit', async (e) => {
            e.preventDefault();

            const formData = new FormData(e.target);
            const data = {
                nom: formData.get('nom'),
                description: formData.get('description'),
                date_debut: formData.get('date_debut'),
                date_fin: formData.get('date_fin')
            };

            try {
                const response = await fetch('/api/projet', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(data)
                });

                if (response.ok) {
                    window.location.reload();  // Rafraîchit la page pour afficher le projet créé
                } else {
                    const error = await response.text();
                    alert('Erreur: ' + error);
                }
            } catch (error) {
                console.error('Erreur lors de la création du projet:', error);
                alert('Erreur lors de la création du projet');
            }
        });

     async function deleteProject(id, nom) {
    // Demander confirmation à l'utilisateur avant la suppression
    const confirmDelete = confirm(Êtes-vous sûr de vouloir supprimer le projet "${nom}" ?);

    if (!confirmDelete) {
        return;  // Si l'utilisateur annule, on arrête la suppression
    }

    // Si l'utilisateur confirme, envoyer la requête de suppression
    try {
        const response = await fetch(/api/projets/${id}, {
            method: 'DELETE',
        });

        // Vérifier si la suppression a réussi
        if (response.ok) {
            alert(Le projet "${nom}" a été supprimé avec succès.);  // Afficher un message de succès
            location.reload();  // Rafraîchir la page après la suppression
        } else {
            const error = await response.json();
            alert(Erreur: ${error.error});  // Afficher une erreur en cas de problème
        }
    } catch (error) {
        // En cas d'erreur de réseau ou autre, afficher une alerte
        alert('Erreur de connexion au serveur. Veuillez réessayer.');
    }
}



       function editProject(id) {
    // Ouvre le modal pour éditer le projet
    $('#editProjet').modal('show');

    // Fais une requête pour obtenir les données du projet par son ID
    fetch(/api/projets/${id})
        .then(response => {
            if (!response.ok) {
                throw new Error('Projet non trouvé');
            }
            return response.json(); // Parse la réponse JSON
        })
        .then(projet => {
            // Remplir le formulaire avec les données du projet
            document.getElementById('editProjectId').value = projet.id;
            document.getElementById('editNom').value = projet.nom;
            document.getElementById('editDescription').value = projet.description;
           // Vérifier et convertir les dates au format YYYY-MM-DD
            let dateDebut = new Date(projet.date_debut);
            let dateFin = new Date(projet.date_fin);
             // Si les dates sont valides, mettre à jour les champs de date
            if (!isNaN(dateDebut.getTime())) {
                document.getElementById('editDate_debut').value = dateDebut.toISOString().split('T')[0]; // YYYY-MM-DD
            }

            if (!isNaN(dateFin.getTime())) {
                document.getElementById('editDate_fin').value = dateFin.toISOString().split('T')[0]; // YYYY-MM-DD
            }
        })
        .catch(error => {
            console.error('Erreur lors de la récupération du projet:', error);
        });
}

document.getElementById('editProjectForm').addEventListener('submit', async (e) => {
    e.preventDefault(); // Empêche l'envoi par défaut du formulaire

    const id = document.getElementById('editProjectId').value; // Récupère l'ID du projet
    const nom = document.getElementById('editNom').value;
    const description = document.getElementById('editDescription').value;
    const date_debut = document.getElementById('editDate_debut').value;
    const date_fin = document.getElementById('editDate_fin').value;

    try {
        const response = await fetch(/api/projets/${id}/modifier, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ nom, description, date_debut, date_fin }),
        });

        if (!response.ok) {
            throw new Error('Erreur lors de la modification du projet');
        }

        alert('Projet modifié avec succès');
        window.location.href = '/projets'; // Rediriger vers la page des projets
    } catch (error) {
        console.error('Erreur lors de la modification du projet:', error);
    }
});





let currentProjetId = null;

// Fonction pour définir l'ID du projet et ouvrir la modal
function setProjetId(projetId) {
    currentProjetId = projetId;
    const modal = new bootstrap.Modal(document.getElementById('ajouterMembreModal'));
    modal.show();
}

// Écouteur pour le bouton "Ajouter des membres"
document.getElementById('btnAjouterMembre').addEventListener('click', function() {
    const projetId = this.getAttribute('data-projet-id');
    setProjetId(projetId);
});

// Gestionnaire d'événement pour le formulaire d'ajout de membre
document.getElementById('ajouterMembreForm').addEventListener('submit', function(event) {
    event.preventDefault();

    const memberEmail = document.getElementById('memberEmail').value.trim();

    // Envoi de la requête d'invitation au backend
    fetch(/api/projects/${currentProjetId}/invite, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ email: memberEmail })
    })
    .then(response => response.text())
    .then(data => {
        alert(data);  // Affiche la réponse du backend, par exemple : "Invitation envoyée !"
        const modal = bootstrap.Modal.getInstance(document.getElementById('ajouterMembreModal'));
        modal.hide();
    })
    .catch(error => {
        console.error('Erreur:', error);
        alert("Erreur lors de l'envoi de l'invitation.");
    });
});


    </script>
 
</body>

</html> 